{"version":3,"file":"sproing.umd.js","sources":["../index.js"],"sourcesContent":["const arrayScalarMult = (array, scalar) => {\n  // console.log(array, scalar)\n  return array.map(x => x * scalar);\n};\nconst arraySubtract = (array1, array2) => {\n  return array1.map((x, i) => x - array2[i]);\n};\nconst arrayAdd = (array1, array2) => {\n  return array1.map((x, i) => x + array2[i]);\n};\n\nconst defaultSpringParams = {\n  tension: 300,\n  damping: 70,\n  mass: 1.5\n};\n\nfunction Sproing(current, target, options) {\n  // target is optional\n  if (!options && typeof target === 'object' && !Array.isArray(target)) {\n    options = target;\n    target = null;\n  }\n\n  options = options || {};\n\n  console.log({ current, target, options });\n\n  // apply defaults\n  this.springParams = {\n    ...defaultSpringParams,\n    ...options.springParams\n  };\n\n  if (typeof current === 'number') {\n    if (target != null && typeof target !== 'number') {\n      throw Error('target must be a scalar or null since current is a scalar');\n    }\n    this.isScalar = true;\n    this.current = current;\n    this.target = target != null ? target : current;\n    this.velocity = 0;\n    this.acceleration = 0;\n  } else {\n    if (!Array.isArray(current)) {\n      throw Error('current must be a number or an array of numbers');\n    }\n    for (let component of current) {\n      if (typeof component !== 'number') {\n        throw Error('current must be a number or an array of numbers');\n      }\n    }\n    if (target != null) {\n      if (!Array.isArray(target) || target.length != current.length) {\n        throw Error(\n          'target must be an array with the same number of components as current (' +\n            current.length +\n            ')'\n        );\n      }\n      for (let component of target) {\n        if (typeof component !== 'number') {\n          throw Error('target must be a number or an array of numbers');\n        }\n      }\n    }\n    this.current = [...current];\n    this.target = target ? [...target] : [...current];\n    this.numComponents = current.length;\n    this.velocity = new Array(current.length).fill(0);\n    this.acceleration = new Array(current.length).fill(0);\n    this.isScalar = false;\n  }\n\n  this.setTarget = function(newTarget) {\n    if (this.isScalar) {\n      if (this.isScalar && typeof newTarget !== 'number') {\n        throw Error('Cannot set target of scalar spring to non-scalar value');\n      }\n      this.target = newTarget;\n    } else {\n      if (!Array.isArray(newTarget)) {\n        throw Error('newTarget must be an array');\n      }\n      if (newTarget.length != this.numComponents) {\n        throw Error('newTarget must be an array of length ', this.numComponents);\n      }\n      this.target = [...newTarget];\n    }\n  };\n\n  this.current = current;\n\n  this.lastUpdateTime = new Date().getTime();\n\n  this.update = function() {\n    const now = new Date().getTime();\n    const elapsedS = (now - this.lastUpdateTime) / 1000;\n    this.lastUpdateTime = now;\n\n    if (this.isScalar) {\n      const displacement = this.current - this.target;\n      const springForce = -this.springParams.tension * displacement;\n      const dampingForce = -this.springParams.damping * this.velocity;\n      this.acceleration = (springForce + dampingForce) * (1.0 / this.springParams.mass);\n      this.velocity += this.acceleration * elapsedS;\n      this.current = this.current + this.velocity * elapsedS;\n      if (typeof options.min === 'number') {\n        this.current = Math.max(this.current, options.min);\n      }\n      if (typeof options.max === 'number') {\n        this.current = Math.min(this.current, options.max);\n      }\n    } else {\n      const displacement = arraySubtract(this.current, this.target);\n      const springForce = arrayScalarMult(displacement, -this.springParams.tension);\n      const dampingForce = arrayScalarMult(this.velocity, -this.springParams.damping);\n      this.acceleration = arrayScalarMult(\n        arrayAdd(springForce, dampingForce),\n        1.0 / this.springParams.mass\n      );\n      this.velocity = arrayAdd(\n        this.velocity,\n        arrayScalarMult(this.acceleration, elapsedS)\n      );\n      this.current = arrayAdd(this.current, arrayScalarMult(this.velocity, elapsedS));\n      if (typeof options.min === 'number') {\n        this.current = this.current.map(x => Math.max(x, options.min));\n      }\n      if (typeof options.max === 'number') {\n        this.current = this.current.map(x => Math.min(x, options.max));\n      }\n    }\n\n    return this.current;\n  };\n}\n\nexport default Sproing;\n"],"names":["arrayScalarMult","array","scalar","map","x","arraySubtract","array1","array2","i","arrayAdd","defaultSpringParams","tension","damping","mass","Sproing","current","target","options","Array","isArray","console","log","springParams","Error","isScalar","velocity","acceleration","component","length","numComponents","fill","setTarget","newTarget","lastUpdateTime","Date","getTime","update","now","elapsedS","displacement","springForce","dampingForce","min","Math","max"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,MAAR,EAAmB;EACzC;EACA,SAAOD,KAAK,CAACE,GAAN,CAAU,UAAAC,CAAC;EAAA,WAAIA,CAAC,GAAGF,MAAR;EAAA,GAAX,CAAP;EACD,CAHD;;EAIA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAASC,MAAT,EAAoB;EACxC,SAAOD,MAAM,CAACH,GAAP,CAAW,UAACC,CAAD,EAAII,CAAJ;EAAA,WAAUJ,CAAC,GAAGG,MAAM,CAACC,CAAD,CAApB;EAAA,GAAX,CAAP;EACD,CAFD;;EAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACH,MAAD,EAASC,MAAT,EAAoB;EACnC,SAAOD,MAAM,CAACH,GAAP,CAAW,UAACC,CAAD,EAAII,CAAJ;EAAA,WAAUJ,CAAC,GAAGG,MAAM,CAACC,CAAD,CAApB;EAAA,GAAX,CAAP;EACD,CAFD;;EAIA,IAAME,mBAAmB,GAAG;EAC1BC,EAAAA,OAAO,EAAE,GADiB;EAE1BC,EAAAA,OAAO,EAAE,EAFiB;EAG1BC,EAAAA,IAAI,EAAE;EAHoB,CAA5B;;EAMA,SAASC,OAAT,CAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2C;EACzC;EACA,MAAI,CAACA,OAAD,IAAY,QAAOD,MAAP,MAAkB,QAA9B,IAA0C,CAACE,KAAK,CAACC,OAAN,CAAcH,MAAd,CAA/C,EAAsE;EACpEC,IAAAA,OAAO,GAAGD,MAAV;EACAA,IAAAA,MAAM,GAAG,IAAT;EACD;;EAEDC,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;EAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY;EAAEN,IAAAA,OAAO,EAAPA,OAAF;EAAWC,IAAAA,MAAM,EAANA,MAAX;EAAmBC,IAAAA,OAAO,EAAPA;EAAnB,GAAZ,EATyC;;EAYzC,OAAKK,YAAL,qBACKZ,mBADL,EAEKO,OAAO,CAACK,YAFb;;EAKA,MAAI,OAAOP,OAAP,KAAmB,QAAvB,EAAiC;EAC/B,QAAIC,MAAM,IAAI,IAAV,IAAkB,OAAOA,MAAP,KAAkB,QAAxC,EAAkD;EAChD,YAAMO,KAAK,CAAC,2DAAD,CAAX;EACD;;EACD,SAAKC,QAAL,GAAgB,IAAhB;EACA,SAAKT,OAAL,GAAeA,OAAf;EACA,SAAKC,MAAL,GAAcA,MAAM,IAAI,IAAV,GAAiBA,MAAjB,GAA0BD,OAAxC;EACA,SAAKU,QAAL,GAAgB,CAAhB;EACA,SAAKC,YAAL,GAAoB,CAApB;EACD,GATD,MASO;EACL,QAAI,CAACR,KAAK,CAACC,OAAN,CAAcJ,OAAd,CAAL,EAA6B;EAC3B,YAAMQ,KAAK,CAAC,iDAAD,CAAX;EACD;;EAHI;EAAA;EAAA;;EAAA;EAIL,2BAAsBR,OAAtB,8HAA+B;EAAA,YAAtBY,UAAsB;;EAC7B,YAAI,OAAOA,UAAP,KAAqB,QAAzB,EAAmC;EACjC,gBAAMJ,KAAK,CAAC,iDAAD,CAAX;EACD;EACF;EARI;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;EASL,QAAIP,MAAM,IAAI,IAAd,EAAoB;EAClB,UAAI,CAACE,KAAK,CAACC,OAAN,CAAcH,MAAd,CAAD,IAA0BA,MAAM,CAACY,MAAP,IAAiBb,OAAO,CAACa,MAAvD,EAA+D;EAC7D,cAAML,KAAK,CACT,4EACER,OAAO,CAACa,MADV,GAEE,GAHO,CAAX;EAKD;;EAPiB;EAAA;EAAA;;EAAA;EAQlB,8BAAsBZ,MAAtB,mIAA8B;EAAA,cAArBW,SAAqB;;EAC5B,cAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;EACjC,kBAAMJ,KAAK,CAAC,gDAAD,CAAX;EACD;EACF;EAZiB;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAanB;;EACD,SAAKR,OAAL,sBAAmBA,OAAnB;EACA,SAAKC,MAAL,GAAcA,MAAM,sBAAOA,MAAP,uBAAqBD,OAArB,CAApB;EACA,SAAKc,aAAL,GAAqBd,OAAO,CAACa,MAA7B;EACA,SAAKH,QAAL,GAAgB,IAAIP,KAAJ,CAAUH,OAAO,CAACa,MAAlB,EAA0BE,IAA1B,CAA+B,CAA/B,CAAhB;EACA,SAAKJ,YAAL,GAAoB,IAAIR,KAAJ,CAAUH,OAAO,CAACa,MAAlB,EAA0BE,IAA1B,CAA+B,CAA/B,CAApB;EACA,SAAKN,QAAL,GAAgB,KAAhB;EACD;;EAED,OAAKO,SAAL,GAAiB,UAASC,SAAT,EAAoB;EACnC,QAAI,KAAKR,QAAT,EAAmB;EACjB,UAAI,KAAKA,QAAL,IAAiB,OAAOQ,SAAP,KAAqB,QAA1C,EAAoD;EAClD,cAAMT,KAAK,CAAC,wDAAD,CAAX;EACD;;EACD,WAAKP,MAAL,GAAcgB,SAAd;EACD,KALD,MAKO;EACL,UAAI,CAACd,KAAK,CAACC,OAAN,CAAca,SAAd,CAAL,EAA+B;EAC7B,cAAMT,KAAK,CAAC,4BAAD,CAAX;EACD;;EACD,UAAIS,SAAS,CAACJ,MAAV,IAAoB,KAAKC,aAA7B,EAA4C;EAC1C,cAAMN,KAAK,CAAC,uCAAD,EAA0C,KAAKM,aAA/C,CAAX;EACD;;EACD,WAAKb,MAAL,sBAAkBgB,SAAlB;EACD;EACF,GAfD;;EAiBA,OAAKjB,OAAL,GAAeA,OAAf;EAEA,OAAKkB,cAAL,GAAsB,IAAIC,IAAJ,GAAWC,OAAX,EAAtB;;EAEA,OAAKC,MAAL,GAAc,YAAW;EACvB,QAAMC,GAAG,GAAG,IAAIH,IAAJ,GAAWC,OAAX,EAAZ;EACA,QAAMG,QAAQ,GAAG,CAACD,GAAG,GAAG,KAAKJ,cAAZ,IAA8B,IAA/C;EACA,SAAKA,cAAL,GAAsBI,GAAtB;;EAEA,QAAI,KAAKb,QAAT,EAAmB;EACjB,UAAMe,YAAY,GAAG,KAAKxB,OAAL,GAAe,KAAKC,MAAzC;EACA,UAAMwB,WAAW,GAAG,CAAC,KAAKlB,YAAL,CAAkBX,OAAnB,GAA6B4B,YAAjD;EACA,UAAME,YAAY,GAAG,CAAC,KAAKnB,YAAL,CAAkBV,OAAnB,GAA6B,KAAKa,QAAvD;EACA,WAAKC,YAAL,GAAoB,CAACc,WAAW,GAAGC,YAAf,KAAgC,MAAM,KAAKnB,YAAL,CAAkBT,IAAxD,CAApB;EACA,WAAKY,QAAL,IAAiB,KAAKC,YAAL,GAAoBY,QAArC;EACA,WAAKvB,OAAL,GAAe,KAAKA,OAAL,GAAe,KAAKU,QAAL,GAAgBa,QAA9C;;EACA,UAAI,OAAOrB,OAAO,CAACyB,GAAf,KAAuB,QAA3B,EAAqC;EACnC,aAAK3B,OAAL,GAAe4B,IAAI,CAACC,GAAL,CAAS,KAAK7B,OAAd,EAAuBE,OAAO,CAACyB,GAA/B,CAAf;EACD;;EACD,UAAI,OAAOzB,OAAO,CAAC2B,GAAf,KAAuB,QAA3B,EAAqC;EACnC,aAAK7B,OAAL,GAAe4B,IAAI,CAACD,GAAL,CAAS,KAAK3B,OAAd,EAAuBE,OAAO,CAAC2B,GAA/B,CAAf;EACD;EACF,KAbD,MAaO;EACL,UAAML,aAAY,GAAGlC,aAAa,CAAC,KAAKU,OAAN,EAAe,KAAKC,MAApB,CAAlC;;EACA,UAAMwB,YAAW,GAAGxC,eAAe,CAACuC,aAAD,EAAe,CAAC,KAAKjB,YAAL,CAAkBX,OAAlC,CAAnC;;EACA,UAAM8B,aAAY,GAAGzC,eAAe,CAAC,KAAKyB,QAAN,EAAgB,CAAC,KAAKH,YAAL,CAAkBV,OAAnC,CAApC;;EACA,WAAKc,YAAL,GAAoB1B,eAAe,CACjCS,QAAQ,CAAC+B,YAAD,EAAcC,aAAd,CADyB,EAEjC,MAAM,KAAKnB,YAAL,CAAkBT,IAFS,CAAnC;EAIA,WAAKY,QAAL,GAAgBhB,QAAQ,CACtB,KAAKgB,QADiB,EAEtBzB,eAAe,CAAC,KAAK0B,YAAN,EAAoBY,QAApB,CAFO,CAAxB;EAIA,WAAKvB,OAAL,GAAeN,QAAQ,CAAC,KAAKM,OAAN,EAAef,eAAe,CAAC,KAAKyB,QAAN,EAAgBa,QAAhB,CAA9B,CAAvB;;EACA,UAAI,OAAOrB,OAAO,CAACyB,GAAf,KAAuB,QAA3B,EAAqC;EACnC,aAAK3B,OAAL,GAAe,KAAKA,OAAL,CAAaZ,GAAb,CAAiB,UAAAC,CAAC;EAAA,iBAAIuC,IAAI,CAACC,GAAL,CAASxC,CAAT,EAAYa,OAAO,CAACyB,GAApB,CAAJ;EAAA,SAAlB,CAAf;EACD;;EACD,UAAI,OAAOzB,OAAO,CAAC2B,GAAf,KAAuB,QAA3B,EAAqC;EACnC,aAAK7B,OAAL,GAAe,KAAKA,OAAL,CAAaZ,GAAb,CAAiB,UAAAC,CAAC;EAAA,iBAAIuC,IAAI,CAACD,GAAL,CAAStC,CAAT,EAAYa,OAAO,CAAC2B,GAApB,CAAJ;EAAA,SAAlB,CAAf;EACD;EACF;;EAED,WAAO,KAAK7B,OAAZ;EACD,GAxCD;EAyCD;;;;;;;;"}