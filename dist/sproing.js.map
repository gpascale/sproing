{"version":3,"file":"sproing.js","sources":["../index.js"],"sourcesContent":["const arrayScalarMult = (array, scalar) => {\n  // console.log(array, scalar)\n  return array.map(x => x * scalar);\n};\nconst arraySubtract = (array1, array2) => {\n  return array1.map((x, i) => x - array2[i]);\n};\nconst arrayAdd = (array1, array2) => {\n  return array1.map((x, i) => x + array2[i]);\n};\n\nconst defaultSpringParams = {\n  tension: 300,\n  damping: 70,\n  mass: 1.5\n};\n\nfunction Sproing(current, target, options) {\n  // target is optional\n  if (!options && typeof target === 'object' && !Array.isArray(target)) {\n    options = target;\n    target = null;\n  }\n\n  options = options || {};\n\n  console.log({ current, target, options });\n\n  // apply defaults\n  this.springParams = {\n    ...defaultSpringParams,\n    ...options.springParams\n  };\n\n  if (typeof current === 'number') {\n    if (target != null && typeof target !== 'number') {\n      throw Error('target must be a scalar or null since current is a scalar');\n    }\n    this.isScalar = true;\n    this.current = current;\n    this.target = target != null ? target : current;\n    this.velocity = 0;\n    this.acceleration = 0;\n  } else {\n    if (!Array.isArray(current)) {\n      throw Error('current must be a number or an array of numbers');\n    }\n    for (let component of current) {\n      if (typeof component !== 'number') {\n        throw Error('current must be a number or an array of numbers');\n      }\n    }\n    if (target != null) {\n      if (!Array.isArray(target) || target.length != current.length) {\n        throw Error(\n          'target must be an array with the same number of components as current (' +\n            current.length +\n            ')'\n        );\n      }\n      for (let component of target) {\n        if (typeof component !== 'number') {\n          throw Error('target must be a number or an array of numbers');\n        }\n      }\n    }\n    this.current = [...current];\n    this.target = target ? [...target] : [...current];\n    this.numComponents = current.length;\n    this.velocity = new Array(current.length).fill(0);\n    this.acceleration = new Array(current.length).fill(0);\n    this.isScalar = false;\n  }\n\n  this.setTarget = function(newTarget) {\n    if (this.isScalar) {\n      if (this.isScalar && typeof newTarget !== 'number') {\n        throw Error('Cannot set target of scalar spring to non-scalar value');\n      }\n      this.target = newTarget;\n    } else {\n      if (!Array.isArray(newTarget)) {\n        throw Error('newTarget must be an array');\n      }\n      if (newTarget.length != this.numComponents) {\n        throw Error('newTarget must be an array of length ', this.numComponents);\n      }\n      this.target = [...newTarget];\n    }\n  };\n\n  this.current = current;\n\n  this.lastUpdateTime = new Date().getTime();\n\n  this.update = function() {\n    const now = new Date().getTime();\n    const elapsedS = (now - this.lastUpdateTime) / 1000;\n    this.lastUpdateTime = now;\n\n    if (this.isScalar) {\n      const displacement = this.current - this.target;\n      const springForce = -this.springParams.tension * displacement;\n      const dampingForce = -this.springParams.damping * this.velocity;\n      this.acceleration = (springForce + dampingForce) * (1.0 / this.springParams.mass);\n      this.velocity += this.acceleration * elapsedS;\n      this.current = this.current + this.velocity * elapsedS;\n      if (typeof options.min === 'number') {\n        this.current = Math.max(this.current, options.min);\n      }\n      if (typeof options.max === 'number') {\n        this.current = Math.min(this.current, options.max);\n      }\n    } else {\n      const displacement = arraySubtract(this.current, this.target);\n      const springForce = arrayScalarMult(displacement, -this.springParams.tension);\n      const dampingForce = arrayScalarMult(this.velocity, -this.springParams.damping);\n      this.acceleration = arrayScalarMult(\n        arrayAdd(springForce, dampingForce),\n        1.0 / this.springParams.mass\n      );\n      this.velocity = arrayAdd(\n        this.velocity,\n        arrayScalarMult(this.acceleration, elapsedS)\n      );\n      this.current = arrayAdd(this.current, arrayScalarMult(this.velocity, elapsedS));\n      if (typeof options.min === 'number') {\n        this.current = this.current.map(x => Math.max(x, options.min));\n      }\n      if (typeof options.max === 'number') {\n        this.current = this.current.map(x => Math.min(x, options.max));\n      }\n    }\n\n    return this.current;\n  };\n}\n\nexport default Sproing;\n"],"names":["arrayScalarMult","array","scalar","map","x","arraySubtract","array1","array2","i","arrayAdd","defaultSpringParams","tension","damping","mass","Sproing","current","target","options","Array","isArray","console","log","springParams","Error","isScalar","velocity","acceleration","component","length","numComponents","fill","setTarget","newTarget","lastUpdateTime","Date","getTime","update","now","elapsedS","displacement","springForce","dampingForce","min","Math","max"],"mappings":"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"}